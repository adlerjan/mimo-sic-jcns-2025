# -*- coding: utf-8 -*-
#
# This script generates Figure 6: Communication performance of the paper "Self-Interference Cancellation in Digital Sensing and Communication Arrays",
# to be presented at the 2025 5th IEEE International Symposium on Joint Communications & Sensing.
# It requires the results generated by the benchmark precoding script.
#
# Please refer to the README.md file for information on how to install the required dependencies.
# For additional questions, please don't hesitate to contact jan.adler@barkhauseninstitut.org .

from __future__ import annotations
from os import path

import matplotlib.pyplot as plt
import numpy as np
import scienceplots  # type: ignore
from scipy.io import loadmat

# Set the correct matplotlib style for IEEE papers
plt.style.use(['science', 'ieee', 'no-latex'])

# Select the correct path
results_path = path.join(path.dirname(__file__), 'results')


# Load the results from the benchmark estimation
results = np.array([0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20], dtype=float)
results_axis = 10 ** -results
evm = np.empty_like(results, dtype=float)

for i, result in enumerate(results):
    result_mat = loadmat(path.join(results_path, f'calibrated_{int(result)}', 'results.mat'))
    evm[i] = result_mat['result_2'].flat[0]

uncalibrated_results = loadmat(path.join(results_path, 'uncalibrated_10', 'results.mat'))
uncalibrated_evm = uncalibrated_results['result_2']

# Plot EVM
evm_fig, evm_axes = plt.subplots(squeeze=True, tight_layout=True)
evm_axes.semilogx(results_axis, evm, label='Precoded')
evm_axes.set_xlabel(r'$\lambda$')
evm_axes.set_ylabel('EVM')
evm_axes.hlines(uncalibrated_evm, results_axis.min(), results_axis.max(), label='Uncoded', linestyle='--')
evm_axes.set_ylim(0, 0.2)
evm_axes.legend(loc='lower right', prop={'size': 6})

plt.show()
